name: Publish Tab

on: 
  push:
    paths:
      - "Formula/tab.rb"

    branches:    
      - master

jobs:
  tab:
    name: tab
    runs-on: macOS-latest
    env:
      TAP_DIR: /usr/local/Homebrew/Library/Taps/austinjones/homebrew-taps
    steps:
      - name: Setup
        env:
          GITHUB_TOKEN: ${{secrets.HOMEBREW_GITHUB_TOKEN}}
          
        run: |
          brew tap austinjones/taps
          cd $TAP_DIR

          git remote set-url origin "https://austinjones:${GITHUB_TOKEN}@github.com/austinjones/homebrew-taps.git"
          git config user.name "Github Actions"
          git config user.email "implAustin+bottlebot@gmail.com"

          brew install jq

      - name: Env | Author
        working-directory: ${{env.TAP_DIR}}
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "::set-env name=AUTHOR::$AUTHOR"

      - name: Setup | Cancel if author is Github Actions
        if: env.AUTHOR == 'Github Actions'
        uses: andymckay/cancel-action@0.2

      - name: Env | Formula
        working-directory: ${{env.TAP_DIR}}
        run: |
          FORMULA="./Formula/tab.rb"
          echo "::set-env name=FORMULA::$FORMULA"

      - name: Env | Archive
        working-directory: ${{env.TAP_DIR}}
        run: |
          ARCHIVE=$(grep "url \"" ./Formula/tab.rb | sed -E 's/\s*url \"//g' | sed 's/\"//g' | head -n 1 | rev | cut -d '/' -f 1 | rev)
          echo "::set-env name=ARCHIVE::$ARCHIVE"

      - name: Env | Tag
        working-directory: ${{env.TAP_DIR}}
        run: |
          TAG=$(echo $ARCHIVE | sed 's/.tar.gz//')
          echo "::set-env name=TAG::$TAG"

      - name: Env | Release ID
        working-directory: ${{env.TAP_DIR}}
        run: |
          URL="https://api.github.com/repos/austinjones/tab-rs/releases/tags/${TAG}"
          RELEASE_ID=$(curl --fail $URL | jq .id)
          echo "::set-env name=RELEASE_ID::$RELEASE_ID"

      - name: Bottle | Build
        working-directory: ${{env.TAP_DIR}}
        env:
          GITHUB_TOKEN: ${{secrets.HOMEBREW_GITHUB_TOKEN}}

        run: |
          echo "Building bottle for tag ${TAG}..."
          brew install --build-bottle $FORMULA

      - name: Bottle | Package
        working-directory: ${{env.TAP_DIR}}
        run: |
          brew bottle --json --root-url=https://github.com/austinjones/tab-rs/releases/download/$TAG $FORMULA
          brew bottle --merge tab--*.json --write --no-commit

      - name: Env | Local Filename
        working-directory: ${{env.TAP_DIR}}
        run: |
          LOCAL_FILE=$(cat tab-*.bottle.json | jq --raw-output '.["austinjones/taps/tab"].bottle.tags[].local_filename')
          echo "::set-env name=LOCAL_FILE::$LOCAL_FILE"

      - name: Env | Publish File
        working-directory: ${{env.TAP_DIR}}
        run: |
          PUBLISH_FILE=$(cat tab-*.bottle.json | jq --raw-output '.["austinjones/taps/tab"].bottle.tags[].filename')
          echo "::set-env name=PUBLISH_FILE::$PUBLISH_FILE"

      - name: Bottle | Upload
        working-directory: ${{env.TAP_DIR}}
        env:
          GITHUB_TOKEN: ${{secrets.HOMEBREW_GITHUB_TOKEN}}
        run: |
          echo "Uploading bottle file $PUBLISH_FILE to $TAG artifacts..."

          curl --fail --data-binary @"$LOCAL_FILE" \
            "https://uploads.github.com/repos/austinjones/tab-rs/releases/$RELEASE_ID/assets?name=$PUBLISH_FILE" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/octet-stream"

      - name: Bottle | Commit & Publish
        working-directory: ${{env.TAP_DIR}}
        run: |
          git add $FORMULA
          git commit -m "Build bottle for tab $TAG: $PUBLISH_FILE"
          git push origin master

          echo "Bottle published at url https://github.com/austinjones/tab-rs/releases/download/$TAG/$PUBLISH_FILE"